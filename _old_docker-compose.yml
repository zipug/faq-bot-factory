x-kafka-common: &kafka-common
  image: bitnami/kafka:latest
  ports:
    - "9092"
  networks:
    - kafka
  healthcheck:
    test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9092; exit $$?;'"
    interval: 5s
    timeout: 10s
    retries: 3
    start_period: 30s
  restart: unless-stopped

x-kafka-env-common: &kafka-env-common
  ALLOW_PLAINTEXT_LISTENER: yes
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093
  KAFKA_KRAFT_CLUSTER_ID: 31KaKKgTStGNrMoJQaWwZQ 
  KAFKA_CFG_PROCESS_ROLES: controller,broker
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
  EXTRA_ARGS: "-Xms128m -Xmx256m"

services:
  server:
    image: faq-server:latest
    volumes:
      - ./configs/config.toml:/app/configs/config.toml
      - ./migrations:/app/migrations
    environment:
      CONFIG_PATH: ${CONFIG_PATH}
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}
      DEFAULT_API: ${DEFAULT_API}
      READ_TIMEOUT: ${READ_TIMEOUT}
      WRITE_TIMEOUT: ${WRITE_TIMEOUT}
      IDLE_TIMEOUT: ${IDLE_TIMEOUT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_SSL_MODE: ${POSTGRES_SSL_MODE}
      POSTGRES_MIGRATIONS_PATH: ${POSTGRES_MIGRATIONS_PATH}
      JWT_SECREY_KEY: ${JWT_SECREY_KEY}
      ACCESS_TOKEN_EXP: ${ACCESS_TOKEN_EXP}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      REDIS_USER: ${REDIS_USER}
      REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      OTP_MAX: ${OTP_MAX}
      OTP_EXPIRATION_TIME: ${OTP_EXPIRATION_TIME}
    ports:
      - "4400:4400"
    restart: unless-stopped
    depends_on:
      - postgres
    network_mode: host

  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usr -d db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql

  redis:
    image: redis:latest
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    env_file:
      - .env
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
    restart: unless-stopped
    volumes:
      - redis_data:/bitnami/redis/data

  kafka-0:
    <<: *kafka-common
    environment:
      <<: *kafka-env-common
      KAFKA_CFG_NODE_ID: 0
    volumes:
      - kafka_0_data:/bitnami/kafka

  kafka-1:
    <<: *kafka-common
    environment:
      <<: *kafka-env-common
      KAFKA_CFG_NODE_ID: 1
    volumes:
      - kafka_1_data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    volumes:
      - ./kafkaui.yml:/etc/kafkaui/dynamic_config.yaml
    depends_on:
      - kafka-0
      - kafka-1
    networks:
      - kafka
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: TRUE
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8080 || exit 1
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  kafka:

volumes:
  kafka_0_data:
    driver: local
  kafka_1_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
